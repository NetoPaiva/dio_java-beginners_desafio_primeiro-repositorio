##################################################################
#                                                                #
#                        _potenciaTech                           #
#                                                                #
#                        _iFood                                  #
#                                                                #
#                        _javaBeginners                          #
#                                                                #
#                        _bootcamp_by_dio                        #
#                                                                #
##################################################################

------------------------------------------------------------------
                        diario_de_bordo
------------------------------------------------------------------

04_desafio_cod__algoritmos_basicos
==================================

    04_1_numeros_iguais
    04_2_soma_multiplos
    04_3_chamada_recursiva
    04_4_fizzbuzz
    04_5_busca_sequencial

------------------------------------------------------------------

04_4_fizzbuzz
=============

        - nível intermediário
        - princípios básicos

------------------------------------------------------------------
    1   Descrição
    2   Instruções
    3   Dúvidas
    4   Testes oferecidos
    5   Código básico fornecido
    6   Código final
------------------------------------------------------------------

1   Descrição
=============

   - Desafio
        - criar função
            - número como argumento
        - retorne
            - Fizz
            - Buzz
            - FizzBuzz

    - Entrada
        - um número
            - se for múltiplo de 3 e 5
                - retorna
                    - FizzBuzz
            - se for apenas múltiplo de 3
                - retorna
                    - Fizz
            - se for apnas múltiplo de 5
                - retorna
                    - Buzz
            - se não for múltiplo de 3 ou 5
                - retorna
                    - exibe o número


    - Saída
        - retornar
            - palavra correta
                - de acordo com seu múltiplo
            - número
                - se não for múltiplo

    - Exemplos

        - entrada            
            3
        - saída
            Fizz
        - entrada            
            5
        - saída
            Buzz
        - entrada            
            15
        - saída
            FizzBuzz
        - entrada            
            4
        - saída
            4



------------------------------------------------------------------

2   Instruções
==============

    - Todas as entradas e saídas dos algoritmos
        - Utilizar de acordo com a linguagem
            - STDIN
            - STDOUT

    - Linguagem JAVA

        - várias formas de implementar

        - recomendação
            - STDIN
                - BufferedReader
            - STDOUT
                - System.out.println

        - exemplo
            
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

            StringTokenizer st = new StringTokenizer(br.readLine());
            // Lê a linha de entrada

            int a = Integer.parseInt(st.nextToken());
            
            System.out.println(a);
            // Imprime o dado
            

    - Linguagem JavaScript

        Em JavaScript as funções de STDIN e STDOUT respectivamente são

            gets
            console.log

        a função gets é implementada internamente para auxiliar a entrada dos dados.

        Exemplo:

            let line = gets(); // Lê a linha de entrada

            console.log(line); // Imprime o dado


    - Linguagem Python

        Em Python existe várias formas de implementar o STDIN e STDOUT
        recomendamos utilizar

            sys.stdin.readline para o STDIN 
            print para o STDOUT.

        Exemplo:

            import sys

            a = int(sys.stdin.readline()) // Lê a linha de entrada

            print(a); // Imprime o dado


------------------------------------------------------------------


3   Dúvidas
===========

    -Realizar desafio de código
        - praticar / aplicar conceitos
        - amadurecimento profissional
        - familiaridade com algoritmos / projetos reais

    - Tirar dúvidas sobre o desafio
        - acessar / interagir
            - Devs da comunidade (Discord)
                https://discord.gg/MUdRyVg
        - Atuar em equipe
            - atividade primordial
            - capacidade de aprendizagem colaborativa
                - habilidade bem reconhecida / esperada pelo mercado
                - rápida / constante evolução tecnológica

    - Os testes
        - validam o código
            - se atender todas as condições requeridas

    - Testes abertos
        - exemplos que podem ser usados para validar requisitos
        - clicar no teste aberto
            - permite verificar parâmetros esperados
                - entrada
                - saída
        - executar teste aberto
            - clicar botão "Executar Testes"

    - Testes ocultos
        - validam se código desenvolvido atende requisitos da solução
            - após clicar em "Entregar Desafio"

    - Ganhar XP
        - sucesso em todos os testes entregues
        - nível dos desafios
            - básico
                - ganha 60XP
            - intermediáio
                - ganha 90XP
            - avançado
                - ganha 120XP

    - Entrega sem sucesso
        - em 1 ou mais testes
            - perde um Coração

    - Corações
        - quantidade possível de entregas sem sucesso
        - limite de 5 Corações
        - estimulam
            - atenção
            - pensamento crítico

    - Recuperação de Corações
        - plano Free
            - 2 horas para cada Coração perdido
        - plano Pro
            - 6 minutos

    - Finalizar Bootcamp
        - entregar todos os desafios com sucesso


------------------------------------------------------------------

4   Testes oferecidos
=====================

    Teste 1 (fechado)

    Teste 2 (aberto)
        Dado de entrada:
            15
        Saída esperada:
            120

        Clique no botão "EXECUTAR TESTES"
        para visulizar a saída do seu algoritmo.

------------------------------------------------------------------

5   Código básico fornecido
===========================


// IMPORTANTE: Para ler os dados de entrada do usuário, utilize a classe Scanner, 
// instanciando seu leitor da seguinte forma: "Scanner leitor = new Scanner(System.in);". 
// Por outro lado, para imprimir suas saídas, utilize System.out.print ou System.out.println.

    import java.util.*;

    public class Desafio {

        public static void main(String[] args) {

            Scanner number = new Scanner(System.in);

            int num = number.nextInt();

            // TODO: Retorne a palavra correta de acordo com o múltiplo de "num". 
            // Caso o valor não seja múltiplo de 3 ou 5, exiba o número, conforme o enunciado.

        }
    }

------------------------------------------------------------------

6   Resultado do desafio
========================

    - Código final
    --------------


// IMPORTANTE: Para ler os dados de entrada do usuário, utilize a classe Scanner, 
// instanciando seu leitor da seguinte forma: "Scanner leitor = new Scanner(System.in);". 
// Por outro lado, para imprimir suas saídas, utilize System.out.print ou System.out.println.


            import java.util.*;

            public class Desafio {

                public static void main(String[] args) {

                    Scanner number = new Scanner(System.in);

                   // System.out.println("Digite um número: ");
                    int num = number.nextInt();
                    verificar(num);
                }
                static void verificar(int num){
                    if (num % 3 == 0 && num % 5 == 0) {
                        System.out.println("FizzBuzz");
                    } else if (num % 3 == 0 || num % 5 == 0) {
                        if (num % 3 == 0){
                            System.out.println("Fizz");
                        } else {
                            System.out.println("Buzz");
                        }
                    } else {
                        System.out.println(num);
                    }
                }

            }


------------------------------------------------------------------

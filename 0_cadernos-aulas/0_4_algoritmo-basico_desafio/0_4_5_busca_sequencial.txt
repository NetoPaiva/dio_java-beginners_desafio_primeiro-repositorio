##################################################################
#                                                                #
#                        _potenciaTech                           #
#                                                                #
#                        _iFood                                  #
#                                                                #
#                        _javaBeginners                          #
#                                                                #
#                        _bootcamp_by_dio                        #
#                                                                #
##################################################################

------------------------------------------------------------------
                        diario_de_bordo
------------------------------------------------------------------

04_desafio_cod__algoritmos_basicos
==================================

    04_1_numeros_iguais
    04_2_soma_multiplos
    04_3_chamada_recursiva
    04_4_fizzbuzz
    04_5_busca_sequencial

------------------------------------------------------------------

04_5_busca_sequencial
=====================

        - nível intermediário
        - princípios básicos

------------------------------------------------------------------
    1   Descrição
    2   Instruções
    3   Dúvidas
    4   Testes oferecidos
    5   Código básico fornecido
    6   Código final
------------------------------------------------------------------

1   Descrição
=============

   - Desafio

        - busca sequencial
            - percorrer todos os elementos da estrutura
            - buscar elemento X

        - dada estrutura vetor A
            - [a1, a2, ... an]
        - percorrer todo vetor
            - comparar
                - A[N] = X
        - se verdadeiro
            - X existe
                - busca concluída

        - considerar
            - array de 10 elementos do tipo inteiro
                {64, 137, -16, 43, 67, 81, -90, 212, 10, 75}

            - carregar elementos na array
            - implementar busca sequencial
            - criar método para realizar busca

            - se valor constar no array
                - retornar
                    - texto contendo valor
                    - posição no array
            - se não constar
                - retornar
                    - texto "número não encontrado"


    - Entrada
        - um valor de busca e/ou array


    - Saída
        - retornar
            - texto
                - "Achei número na posição tal"

    - Exemplos

        - entrada            
            8
        - saída
            Achei 81 na posição 5
        - entrada            
            10
        - saída
            Achei 10 na posição 8
        - entrada            
            -16
        - saída
            Achei -16 na posição 2
        - entrada            
            4
        - saída
            Número 4 não encontrado!



------------------------------------------------------------------

2   Instruções
==============

    - Todas as entradas e saídas dos algoritmos
        - Utilizar de acordo com a linguagem
            - STDIN
            - STDOUT

    - Linguagem JAVA

        - várias formas de implementar

        - recomendação
            - STDIN
                - BufferedReader
            - STDOUT
                - System.out.println

        - exemplo
            
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

            StringTokenizer st = new StringTokenizer(br.readLine());
            // Lê a linha de entrada

            int a = Integer.parseInt(st.nextToken());
            
            System.out.println(a);
            // Imprime o dado
            

    - Linguagem JavaScript

        Em JavaScript as funções de STDIN e STDOUT respectivamente são

            gets
            console.log

        a função gets é implementada internamente para auxiliar a entrada dos dados.

        Exemplo:

            let line = gets(); // Lê a linha de entrada

            console.log(line); // Imprime o dado


    - Linguagem Python

        Em Python existe várias formas de implementar o STDIN e STDOUT
        recomendamos utilizar

            sys.stdin.readline para o STDIN 
            print para o STDOUT.

        Exemplo:

            import sys

            a = int(sys.stdin.readline()) // Lê a linha de entrada

            print(a); // Imprime o dado


------------------------------------------------------------------


3   Dúvidas
===========

    -Realizar desafio de código
        - praticar / aplicar conceitos
        - amadurecimento profissional
        - familiaridade com algoritmos / projetos reais

    - Tirar dúvidas sobre o desafio
        - acessar / interagir
            - Devs da comunidade (Discord)
                https://discord.gg/MUdRyVg
        - Atuar em equipe
            - atividade primordial
            - capacidade de aprendizagem colaborativa
                - habilidade bem reconhecida / esperada pelo mercado
                - rápida / constante evolução tecnológica

    - Os testes
        - validam o código
            - se atender todas as condições requeridas

    - Testes abertos
        - exemplos que podem ser usados para validar requisitos
        - clicar no teste aberto
            - permite verificar parâmetros esperados
                - entrada
                - saída
        - executar teste aberto
            - clicar botão "Executar Testes"

    - Testes ocultos
        - validam se código desenvolvido atende requisitos da solução
            - após clicar em "Entregar Desafio"

    - Ganhar XP
        - sucesso em todos os testes entregues
        - nível dos desafios
            - básico
                - ganha 60XP
            - intermediáio
                - ganha 90XP
            - avançado
                - ganha 120XP

    - Entrega sem sucesso
        - em 1 ou mais testes
            - perde um Coração

    - Corações
        - quantidade possível de entregas sem sucesso
        - limite de 5 Corações
        - estimulam
            - atenção
            - pensamento crítico

    - Recuperação de Corações
        - plano Free
            - 2 horas para cada Coração perdido
        - plano Pro
            - 6 minutos

    - Finalizar Bootcamp
        - entregar todos os desafios com sucesso


------------------------------------------------------------------

4   Testes oferecidos
=====================

    Teste 1 (aberto)

        Dado de entrada:
            81
        Saída esperada:
            Achei 81 na posicao 5


    Teste 2 (fechado)
       

    Teste 3 (aberto)

        Dado de entrada:
            4
        Saída esperada:
            Numero 4 nao encontrado!

        Clique no botão "EXECUTAR TESTES"
        para visulizar a saída do seu algoritmo.

------------------------------------------------------------------

5   Código básico fornecido
===========================


// IMPORTANTE: Para ler os dados de entrada do usuário, utilize a classe Scanner, 
// instanciando seu leitor da seguinte forma: "Scanner leitor = new Scanner(System.in);". 
// Por outro lado, para imprimir suas saídas, utilize System.out.print ou System.out.println.

        import java.util.*;

        public class BuscaSequencial {

            public static void main(String[] args) {

                Scanner leitor = new Scanner(System.in);

                int[] elementos = {64, 137, -16, 43, 67, 81, -90, 212, 10, 75}; 

                //TODO: Retorne o valor do elemento no Array junto de sua respectiva posição.

            }
        }

------------------------------------------------------------------

6   Resultado do desafio
========================

    - Código final
    --------------


// IMPORTANTE: Para ler os dados de entrada do usuário, utilize a classe Scanner, 
// instanciando seu leitor da seguinte forma: "Scanner leitor = new Scanner(System.in);". 
// Por outro lado, para imprimir suas saídas, utilize System.out.print ou System.out.println.


        import java.util.*;

        public class BuscaSequencial {

            public static void main(String[] args) {

                Scanner leitor = new Scanner(System.in);
                int numero, pos = -1;
                int[] elementos = {64, 137, -16, 43, 67, 81, -90, 212, 10, 75}; 

               // System.out.println("Digite o valor para buscar: ");
                numero = leitor.nextInt();

                pos = posicao(numero, elementos);

                if (pos == -1){
                    System.out.println("Numero " + numero + " nao encontrado!");
                } else {
                    System.out.println("Achei " + numero + " na posicao " + pos);
                }
            }
            
            static int posicao(int numero, int[] elementos) {
                int pos = -1;
                for (int i = 0; i < elementos.length; i++){
                    if(numero == elementos[i]){
                        pos = i;
                    }
                }

                return pos;
            }

        }


------------------------------------------------------------------
